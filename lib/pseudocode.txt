Pseudocode:

Files
  1. enigma.rb
  2. encrypt.rb
  3. message.txt
  4. encrypted.txt
  5. decrypt.rb
  6. cracked.txt
  7. date.rb #ruby may already have existing Date class

Classes/Methods
  1. Enigma (.encrypt, .decrypt, .crack)
  2. Date (.today) ##ruby may already have existing Date class
  3. KeyGenerator (possibly a method within Enigma)
  4. runner
  5. offset calculator
  6. character map

Variables
  1. output
  2. message
  3. key

  KeyGenerator

  Use a range of 0..100 to generate a five digit key.

    numbers = (0..9).to_a.shuffle
    [3, 0, 8, 6, 9, 1, 7, 4, 5, 2]

    numbers.each do |num|
      if key.length < 5
        key << num
      else
        break
      end
    end

    key => [9,6,3,4,8]

    OR
    
    key_gen = Random.new

    key_gen.rand(10000..99999)

    new_key = key.join #is it necessary to convert to string here?
    => "96348"

  Grab digits 01, 12, 23, 34 for rotation values.

    def rotation_values(string)
      #ABCD



    end



  Use date for offset value. Take date, square it, grab last four digits.
  Add rotation and offset.

  Grab each four characters and apply encryption ABCD, ABCD, ABCD.

  CharacterMap

  26 lowercase letters
  0..9 numeric digits
  space
  period
  comma
